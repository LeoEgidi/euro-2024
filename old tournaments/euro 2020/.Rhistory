"Scotland", "France",
"Portugal", "Poland"),
home_team_goal_count = c(1,0,3,2,1,2,1,1,0,1,4,1),
away_team_goal_count = c(0,2,0,1,2,0,0,1,0,1,2,1))
euro_data <-rbind(euro_data, euro_data_test2)
euro_data_test3 <- data.frame(
date_GMT = rep(12, ngames_prev),
home_team_name = c( "Italy","Switzerland",
"Ukraine", "Netherlands",
"Denmark", "Finland",
"Scotland","England",
"Sweden", "Spain",
"Portugal", "Germany" ),
away_team_name = c("Wales", "Turkey",
"Austria", "FYR Macedonia",
"Russia", "Belgium",
"Croatia", "Czech Republic",
"Poland","Slovakia",
"France","Hungary"),
home_team_goal_count = c(1,3,0,3,4,0,1,1,3,5,2,2),
away_team_goal_count = c(0,1,1,0,1,2,3,0,2,0,2,2))
euro_data <-rbind(euro_data, euro_data_test3)
ngames_prev <- 8
euro_data_test_round16 <- data.frame(
date_GMT = rep(13, ngames_prev),
home_team_name = c("Wales", "Italy",
"Netherlands", "Belgium",
"Croatia", "France",
"England", "Sweden"),
away_team_name = c( "Denmark", "Austria",
"Czech Republic", "Portugal",
"Spain", "Switzerland",
"Germany", "Ukraine"),
home_team_goal_count = c(0,2,0,1,3,3,2,1),
away_team_goal_count = c(4,1,2,0,5,3,0,2))
euro_data <-rbind(euro_data, euro_data_test_round16)
ngames_prev <- 4
euro_data_test_q <- data.frame(
date_GMT = rep(14, ngames_prev),
home_team_name = c("Switzerland", "Belgium",
"Czech Republic", "Ukraine"),
away_team_name = c( "Spain", "Italy", "Denmark", "England"),
home_team_goal_count = c(1,1,1,0),
away_team_goal_count = c(1,2,2,4))
euro_data <-rbind(euro_data, euro_data_test_q)
ngames_prev <- 2
euro_data_test_semi <- data.frame(
date_GMT = rep(15, ngames_prev),
home_team_name = c("Italy", "England"),
away_team_name = c( "Spain",  "Denmark" ),
home_team_goal_count = c(1,2),
away_team_goal_count = c(1,1))
euro_data <-rbind(euro_data, euro_data_test_semi)
ngames_prev <- 2
euro_data_test_final <- data.frame(
date_GMT = rep(16, ngames_prev),
home_team_name = c( "England", "Spain"  ),
away_team_name = c( "Italy", "Denmark" ),
home_team_goal_count = rep(NA, ngames_prev),
away_team_goal_count = rep(NA, ngames_prev))
euro_data <-rbind(euro_data, euro_data_test_final)
p_aggr <- mean(c(0.624,0.289,0.086,0.745,0.662,0.626,0.587,0.357,0.18,0.224,0.535,0.455,
0.474, 0.36,0.524,0.628,0.47,0.584,0.58,0.238,0.152,0.224,0.326,0.223,
0.553,0.553,0.308,0.743,0.694,0.769,0.454,0.677,0.466,0.677,0.276,0.199))
p_aggr_16 <- mean(c(0.344,0.212,0.19,0.657,0.269,0.224,0.614,0.246))
fit4_rank <- stan_foot(data = euro_data,
model="double_pois",
iter = 2000, cores = 4,
predict=ngames_prev,
ranking = fifa_ranking,
dynamic_type = "seasonal") # double poisson
fit4 <- stan_foot(data = euro_data,
model="double_pois",
iter = 2000, cores = 4,
predict=ngames_prev,
#ranking = fifa_ranking,
dynamic_type = "seasonal") # double poisson
# Inghilterra-Italia
quote7 <- c(3,3,2.62)
prob7 <- c(0.445, 0.295, 0.260)
foot_prob(fit4_rank, euro_data)
foot_prob(fit4, euro_data)
foot_prob(fit4, euro_data, "England", "Italy")
help("foot_prob")
foot_prob(fit4, euro_data, "England", "Italy")
foot_prob(fit4, euro_data,  "Italy", "England")
foot_prob(fit4, euro_data, c("England"), c("Italy"))
object <- fit4
data <- euro_data
home_eam <-"England"
away_team<-"Italy"
colnames(data) <- c("season", "home", "away",
"homegoals", "awaygoals")
teams <- unique(data$home)
sims <- rstan::extract(object)
predict <- dim(sims$y_prev)[2]
data_prev <- data[(dim(data)[1]-predict +1):(dim(data)[1]),]
if (missing(home_team) & missing(away_team)){
home_team <- data_prev$home
away_team <- data_prev$away
}
home_team <- "England"
find_match <- which(data_prev$home==home_team & data_prev$away == away_team )
true_gol_home <- data$homegoals[(dim(sims$y_rep)[2]+1):(dim(sims$y_rep)[2]+predict)]
true_gol_away <- data$awaygoals[(dim(sims$y_rep)[2]+1):(dim(sims$y_rep)[2]+predict)]
true_gol_home <- true_gol_home[match(home_team, data_prev$home)]
true_gol_away <- true_gol_away[match(away_team, data_prev$away)]
if (length(find_match)==0){
stop(paste("There is not any out-of-sample match:",
home_team,"-", away_team, sep=""))
}
sims <- rstan::extract(object)
M <- dim(sims$y_prev)[1]
if (is.null(sims$y_prev)){
stop("foot_prob function can not be used with the student_t model")
}
previsioni1<-sims$y_prev[, find_match ,1]
previsioni2<-sims$y_prev[, find_match,2]
prob_h =  prob_d = prob_a = row_pos = col_pos = mlo = c()
home_team
prob_h =  prob_d = prob_a = row_pos = col_pos = mlo = c()
data_exp_tot <- rep(1,4)
for (i in 1:length(find_match)){
posterior_prop1<-table(subset(previsioni1[,i], previsioni1[,i]<15))
posterior_prop2<-table(subset(previsioni2[,i], previsioni2[,i]<15))
teamaa=home_team[i]
teamab=away_team[i]
x_min=y_min=min(length(posterior_prop1),
length(posterior_prop2))
counts_mix<-matrix(0, min(length(posterior_prop1), length(posterior_prop2)),
min(length(posterior_prop1), length(posterior_prop2)))
for (j in 1: min(length(posterior_prop1), length(posterior_prop2))){
for (t in 1: min(length(posterior_prop1), length(posterior_prop2))){
counts_mix[j,t]<-posterior_prop1[j]*posterior_prop2[t]
}}
dim1 <- dim(counts_mix)[1]
dim2 <- dim(counts_mix)[2]
x <- seq(0,dim1-1, length.out=dim1)
y <- seq(0,dim2-1, length.out=dim2)
data_exp <- expand.grid(Home=x, Away=y)
data_exp$Prob <- as.double(counts_mix/(M*M))
data_exp$matches <- paste(  teamaa,"-", teamab)
data_exp$true_gol_home <- true_gol_home[i]
data_exp$true_gol_away <- true_gol_away[i]
#rep(i, length(data_exp$Prob))
# overall "adjusted" probabilities
prob_h[i] <- sum(counts_mix[lower.tri(counts_mix)]/(M*M))/sum(data_exp$Prob)
prob_d[i] <- sum(diag(counts_mix/(M*M)))/sum(data_exp$Prob)
prob_a[i] <- sum(counts_mix[upper.tri(counts_mix)]/(M*M))/sum(data_exp$Prob)
# MLO (most likely outcome)
row_pos[i] <- row(counts_mix)[counts_mix==max(counts_mix)]
col_pos[i] <- col(counts_mix)[counts_mix==max(counts_mix)]
mlo[i] <- paste(row_pos[i]-1, "-", col_pos[i]-1, " (",
round(max(counts_mix/(M*M)),3), ")" , sep="")
data_exp_tot <- rbind(data_exp_tot, data_exp)
}
for (i in 1:length(find_match)){
posterior_prop1<-table(subset(previsioni1[,i], previsioni1[,i]<15))
posterior_prop2<-table(subset(previsioni2[,i], previsioni2[,i]<15))
teamaa=home_team[i]
teamab=away_team[i]
x_min=y_min=min(length(posterior_prop1),
length(posterior_prop2))
counts_mix<-matrix(0, min(length(posterior_prop1), length(posterior_prop2)),
min(length(posterior_prop1), length(posterior_prop2)))
for (j in 1: min(length(posterior_prop1), length(posterior_prop2))){
for (t in 1: min(length(posterior_prop1), length(posterior_prop2))){
counts_mix[j,t]<-posterior_prop1[j]*posterior_prop2[t]
}}
dim1 <- dim(counts_mix)[1]
dim2 <- dim(counts_mix)[2]
x <- seq(0,dim1-1, length.out=dim1)
y <- seq(0,dim2-1, length.out=dim2)
data_exp <- expand.grid(Home=x, Away=y)
data_exp$Prob <- as.double(counts_mix/(M*M))
data_exp$matches <- paste(  teamaa,"-", teamab)
data_exp$true_gol_home <- true_gol_home[i]
data_exp$true_gol_away <- true_gol_away[i]
#rep(i, length(data_exp$Prob))
# overall "adjusted" probabilities
prob_h[i] <- sum(counts_mix[lower.tri(counts_mix)]/(M*M))/sum(data_exp$Prob)
prob_d[i] <- sum(diag(counts_mix/(M*M)))/sum(data_exp$Prob)
prob_a[i] <- sum(counts_mix[upper.tri(counts_mix)]/(M*M))/sum(data_exp$Prob)
# MLO (most likely outcome)
row_pos[i] <- row(counts_mix)[counts_mix==max(counts_mix)]
col_pos[i] <- col(counts_mix)[counts_mix==max(counts_mix)]
mlo[i] <- paste(row_pos[i]-1, "-", col_pos[i]-1, " (",
round(max(counts_mix/(M*M)),3), ")" , sep="")
data_exp_tot <- rbind(data_exp_tot, data_exp)
}
find_match
find_match <- which(data_prev$home==home_team & data_prev$away == away_team )
true_gol_home <- data$homegoals[(dim(sims$y_rep)[2]+1):(dim(sims$y_rep)[2]+predict)]
true_gol_away <- data$awaygoals[(dim(sims$y_rep)[2]+1):(dim(sims$y_rep)[2]+predict)]
true_gol_home <- true_gol_home[match(home_team, data_prev$home)]
true_gol_away <- true_gol_away[match(away_team, data_prev$away)]
if (length(find_match)==0){
stop(paste("There is not any out-of-sample match:",
home_team,"-", away_team, sep=""))
}
sims <- rstan::extract(object)
M <- dim(sims$y_prev)[1]
if (is.null(sims$y_prev)){
stop("foot_prob function can not be used with the student_t model")
}
previsioni1<-sims$y_prev[, find_match ,1]
previsioni2<-sims$y_prev[, find_match,2]
prob_h =  prob_d = prob_a = row_pos = col_pos = mlo = c()
data_exp_tot <- rep(1,4)
for (i in 1:length(find_match)){
posterior_prop1<-table(subset(previsioni1[i], previsioni1[i]<15))
posterior_prop2<-table(subset(previsioni2[i], previsioni2[i]<15))
teamaa=home_team[i]
teamab=away_team[i]
x_min=y_min=min(length(posterior_prop1),
length(posterior_prop2))
counts_mix<-matrix(0, min(length(posterior_prop1), length(posterior_prop2)),
min(length(posterior_prop1), length(posterior_prop2)))
for (j in 1: min(length(posterior_prop1), length(posterior_prop2))){
for (t in 1: min(length(posterior_prop1), length(posterior_prop2))){
counts_mix[j,t]<-posterior_prop1[j]*posterior_prop2[t]
}}
dim1 <- dim(counts_mix)[1]
dim2 <- dim(counts_mix)[2]
x <- seq(0,dim1-1, length.out=dim1)
y <- seq(0,dim2-1, length.out=dim2)
data_exp <- expand.grid(Home=x, Away=y)
data_exp$Prob <- as.double(counts_mix/(M*M))
data_exp$matches <- paste(  teamaa,"-", teamab)
data_exp$true_gol_home <- true_gol_home[i]
data_exp$true_gol_away <- true_gol_away[i]
#rep(i, length(data_exp$Prob))
# overall "adjusted" probabilities
prob_h[i] <- sum(counts_mix[lower.tri(counts_mix)]/(M*M))/sum(data_exp$Prob)
prob_d[i] <- sum(diag(counts_mix/(M*M)))/sum(data_exp$Prob)
prob_a[i] <- sum(counts_mix[upper.tri(counts_mix)]/(M*M))/sum(data_exp$Prob)
# MLO (most likely outcome)
row_pos[i] <- row(counts_mix)[counts_mix==max(counts_mix)]
col_pos[i] <- col(counts_mix)[counts_mix==max(counts_mix)]
mlo[i] <- paste(row_pos[i]-1, "-", col_pos[i]-1, " (",
round(max(counts_mix/(M*M)),3), ")" , sep="")
data_exp_tot <- rbind(data_exp_tot, data_exp)
}
data_exp_tot <- data_exp_tot[-c(1), ]
tbl <- data.frame(home_team = home_team,
away_team = away_team,
prob_h = round(prob_h,3),
prob_d = round(prob_d,3),
prob_a = round(prob_a,3),
mlo = mlo)
p <- ggplot(data_exp_tot, aes(Home, Away, z= Prob)) + geom_tile(aes(fill = Prob)) +
theme_bw() +
scale_fill_gradient(low="white", high="black") +
facet_wrap("matches", scales = "free")+
geom_rect(aes(xmin = as.numeric(as.vector(true_gol_home))-0.5,
xmax = as.numeric(as.vector(true_gol_home))+0.5,
ymin = as.numeric(as.vector(true_gol_away))-0.5,
ymax =as.numeric(as.vector(true_gol_away))+0.5),
fill = "transparent", color = "red", size = 1.5)+
labs(title= "Posterior match probabilities")+
yaxis_text(size=12)+
xaxis_text( size = rel(12))+
theme(plot.title = element_text(size = 22),
strip.text = element_text(size = 12),
axis.text.x = element_text(size=22),
axis.text.y = element_text(size=22),
plot.subtitle=element_text(size=13),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=14))
library(reshape2)
libray(bayesplot)
library(bayesplot)
p <- ggplot(data_exp_tot, aes(Home, Away, z= Prob)) + geom_tile(aes(fill = Prob)) +
theme_bw() +
scale_fill_gradient(low="white", high="black") +
facet_wrap("matches", scales = "free")+
geom_rect(aes(xmin = as.numeric(as.vector(true_gol_home))-0.5,
xmax = as.numeric(as.vector(true_gol_home))+0.5,
ymin = as.numeric(as.vector(true_gol_away))-0.5,
ymax =as.numeric(as.vector(true_gol_away))+0.5),
fill = "transparent", color = "red", size = 1.5)+
labs(title= "Posterior match probabilities")+
yaxis_text(size=12)+
xaxis_text( size = rel(12))+
theme(plot.title = element_text(size = 22),
strip.text = element_text(size = 12),
axis.text.x = element_text(size=22),
axis.text.y = element_text(size=22),
plot.subtitle=element_text(size=13),
axis.title=element_text(size=18,face="bold"),
legend.text=element_text(size=14))
p
# Inghilterra-Italia
quote7 <- c(3,3,2.62)
prob7 <- c(0.415, 0.331, 0.254)
quote7*prob7
quotew <- c(2, 1.8)
probw <- c(prob7[3]+prob7[2]/2, prob7[1]+prob7[2]/2)
# Inghilterra-Italia
quote7 <- c(3,3,2.62)
prob7 <- c(0.415, 0.331, 0.254)
quotew <- c(2, 1.8)
probw <- c(prob7[3]+prob7[2]/2, prob7[1]+prob7[2]/2)
probw
probw*quotew
15*8
# Inghilterra-Italia
quote7 <- c(2.62,2.9, 3.1)
prob7 <- c(0.415, 0.331, 0.254)
prob7*quote7
quotew <- c(2, 1.8)
probw <- c(prob7[3]+prob7[2]/2, prob7[1]+prob7[2]/2)
probw
quotew*probw
# Inghilterra-Italia
quote7 <- c(2.55,3, 3.1)
prob7 <- c(0.415, 0.331, 0.254)
quote7*prob7
# Inghilterra-Italia
quote7 <- c(2.45,2.9, 3.2)
prob7 <- c(0.415, 0.331, 0.254)
# Inghilterra-Italia
quote7 <- c(2.45,2.9, 3.2)
prob7 <- c(0.415, 0.331, 0.254)
quote7*prob7
# Inghilterra-Italia
quote7 <- c(2.62,3, 3.05)
prob7 <- c(0.415, 0.331, 0.254)
quote7*prob7
# Inghilterra-Italia
quote7 <- c(2.55,3, 3.1)
prob7 <- c(0.415, 0.331, 0.254)
quote7*prob7
prob_bk <- function(quote_input){
bk <- c()
for (i in 1:length(quote_input))
bk[i] <- (1/quote_input[i])/(sum(1/(quote_input)))
return(bk)
}
prob_bk(quote7)
prob_bk(quote7)/prob7
prob7/prob_bk(quote7)
setwd("C:/Users/leoeg/Dropbox/Corsi esterni, app, materiale vario/euro 2020")
library(tidyverse)
library(footBayes)
library(loo)
nations_data <- read.csv2(file="nations.csv", sep = ",")
euro_qual_data <- read.csv2(file="euro_qual.csv", sep = ",")
wc_qual_data <- read.csv2(file="wc.csv", sep = ",")
#View(nations_data)
#View(euro_qual_data)
#View(wc_qual_data)
nations_ristr <- nations_data  %>%
select(date_GMT, home_team_name, away_team_name,
home_team_goal_count, away_team_goal_count)
nations_ristr <- nations_ristr[-c(163, 164),]
euro_qual_ristr <- euro_qual_data  %>%
select(date_GMT, home_team_name, away_team_name,
home_team_goal_count, away_team_goal_count)
wc_qual_ristr <- wc_qual_data  %>%
select(date_GMT, home_team_name, away_team_name,
home_team_goal_count, away_team_goal_count)
wc_qual_ristr <- wc_qual_ristr[c(1:75),]
fifa_ranking <- read.csv2(file="ranking_fifa.csv", header=FALSE)
#fifa_ranking <- fifa_ranking[c(1:48),]
colnames(fifa_ranking) <- c("team_name", "ranking")
euro_data <- rbind(nations_ristr, euro_qual_ristr, wc_qual_ristr)
# redefining times from 1 to 12
times <- paste(substr(euro_data$date_GMT, 1, 3),
substr(euro_data$date_GMT, 8, 11))
times <- as.factor(times)
levels(times) <- c(2, 1, 9, 5, 8, 4, 7, 3, 6)
euro_data$date_GMT <- as.numeric(as.vector(times))
euro_data <- arrange(euro_data, date_GMT)
# drop low teams
low_teams <- c("Faroe Islands", "Latvia",  "Malta",
"San Marino", "Liechtenstein", "Gibraltar",
"Andorra")
euro_data1<- euro_data %>% filter(is.na(match(home_team_name, low_teams)))
euro_data2<- euro_data1 %>% filter(is.na(match(away_team_name, low_teams)))
euro_data <- euro_data2
ngames_prev <- 12
euro_data_test <- data.frame(
date_GMT = rep(10, ngames_prev),
home_team_name = c("Italy", "Wales",
"Denmark", "Russia",
"England", "Austria",
"Netherlands", "Scotland",
"Poland", "Spain",
"Hungary", "Germany"),
away_team_name = c("Turkey", "Switzerland",
"Finland", "Belgium",
"Croatia", "FYR Macedonia",
"Ukraine", "Czech Republic",
"Slovakia", "Sweden",
"Portugal", "France"),
home_team_goal_count = c(3,1,0,0,1,3,3,0,1,0, 0,0),
away_team_goal_count = c(0,1,1,3,0,1,2,2,2,0,3,1))
euro_data <-rbind(euro_data, euro_data_test)
euro_data_test2 <- data.frame(
date_GMT = rep(11, ngames_prev),
home_team_name = c("Russia", "Turkey",
"Italy", "Ukraine",
"Denmark", "Netherlands",
"Sweden", "Croatia",
"England", "Hungary",
"Germany", "Spain"),
away_team_name = c("Finland", "Wales",
"Switzerland", "FYR Macedonia",
"Belgium", "Austria",
"Slovakia",  "Czech Republic",
"Scotland", "France",
"Portugal", "Poland"),
home_team_goal_count = c(1,0,3,2,1,2,1,1,0,1,4,1),
away_team_goal_count = c(0,2,0,1,2,0,0,1,0,1,2,1))
euro_data <-rbind(euro_data, euro_data_test2)
euro_data_test3 <- data.frame(
date_GMT = rep(12, ngames_prev),
home_team_name = c( "Italy","Switzerland",
"Ukraine", "Netherlands",
"Denmark", "Finland",
"Scotland","England",
"Sweden", "Spain",
"Portugal", "Germany" ),
away_team_name = c("Wales", "Turkey",
"Austria", "FYR Macedonia",
"Russia", "Belgium",
"Croatia", "Czech Republic",
"Poland","Slovakia",
"France","Hungary"),
home_team_goal_count = c(1,3,0,3,4,0,1,1,3,5,2,2),
away_team_goal_count = c(0,1,1,0,1,2,3,0,2,0,2,2))
euro_data <-rbind(euro_data, euro_data_test3)
ngames_prev <- 8
euro_data_test_round16 <- data.frame(
date_GMT = rep(13, ngames_prev),
home_team_name = c("Wales", "Italy",
"Netherlands", "Belgium",
"Croatia", "France",
"England", "Sweden"),
away_team_name = c( "Denmark", "Austria",
"Czech Republic", "Portugal",
"Spain", "Switzerland",
"Germany", "Ukraine"),
home_team_goal_count = c(0,2,0,1,3,3,2,1),
away_team_goal_count = c(4,1,2,0,5,3,0,2))
euro_data <-rbind(euro_data, euro_data_test_round16)
ngames_prev <- 4
euro_data_test_q <- data.frame(
date_GMT = rep(14, ngames_prev),
home_team_name = c("Switzerland", "Belgium",
"Czech Republic", "Ukraine"),
away_team_name = c( "Spain", "Italy", "Denmark", "England"),
home_team_goal_count = c(1,1,1,0),
away_team_goal_count = c(1,2,2,4))
euro_data <-rbind(euro_data, euro_data_test_q)
ngames_prev <- 2
euro_data_test_semi <- data.frame(
date_GMT = rep(15, ngames_prev),
home_team_name = c("Italy", "England"),
away_team_name = c( "Spain",  "Denmark" ),
home_team_goal_count = c(1,2),
away_team_goal_count = c(1,1))
euro_data <-rbind(euro_data, euro_data_test_semi)
ngames_prev <- 2
euro_data_test_final <- data.frame(
date_GMT = rep(16, ngames_prev),
home_team_name = c( "England", "Spain"  ),
away_team_name = c( "Italy", "Denmark" ),
home_team_goal_count = rep(NA, ngames_prev),
away_team_goal_count = rep(NA, ngames_prev))
euro_data <-rbind(euro_data, euro_data_test_final)
p_aggr <- mean(c(0.624,0.289,0.086,0.745,0.662,0.626,0.587,0.357,0.18,0.224,0.535,0.455,
0.474, 0.36,0.524,0.628,0.47,0.584,0.58,0.238,0.152,0.224,0.326,0.223,
0.553,0.553,0.308,0.743,0.694,0.769,0.454,0.677,0.466,0.677,0.276,0.199))
p_aggr_16 <- mean(c(0.344,0.212,0.19,0.657,0.269,0.224,0.614,0.246))
## Static models
fit1 <- stan_foot(data = euro_data,
model="double_pois", predict= ngames_prev,
iter = 2000) # double poisson
foot_prob(fit1, euro_data)
# Inghilterra-Italia
quote7 <- c(2.55,3.05, 3.35)
prob7 <- c(0.415, 0.331, 0.254)
quote7*prob7
quotew <- c(2, 1.72)
probw <- c(prob7[3]+prob7[2]/2, prob7[1]+prob7[2]/2)
quotew*probw
p_aggr <- mean(c(0.624,0.289,0.086,0.745,0.662,0.626,0.587,0.357,0.18,0.224,0.535,0.455,
0.474, 0.36,0.524,0.628,0.47,0.584,0.58,0.238,0.152,0.224,0.326,0.223,
0.553,0.553,0.308,0.743,0.694,0.769,0.454,0.677,0.466,0.677,0.276,0.199))
p_aggr_16 <- mean(c(0.344,0.212,0.19,0.657,0.269,0.224,0.614,0.246))
p_quarti <- mean(c(0.252, 0.195, 0.463, 0.559))
p_semi <- mean(c(0.269, 0.269))
p_final <- 0.331
p_aggr
p_aggr_16
p_quarti
p_semi
c(0.624,0.289,0.086,0.745,0.662,0.626,0.587,0.357,0.18,0.224,0.535,0.455,
0.474, 0.36,0.524,0.628,0.47,0.584,0.58,0.238,0.152,0.224,0.326,0.223,
0.553,0.553,0.308,0.743,0.694,0.769,0.454,0.677,0.466,0.677,0.276,0.199,
0.344,0.212,0.19,0.657,0.269,0.224,0.614,0.246,
0.252, 0.195, 0.463, 0.559, 0.269, 0.269,
0.331)
p_tot <- mean(c(0.624,0.289,0.086,0.745,0.662,0.626,0.587,0.357,0.18,0.224,0.535,0.455,
0.474, 0.36,0.524,0.628,0.47,0.584,0.58,0.238,0.152,0.224,0.326,0.223,
0.553,0.553,0.308,0.743,0.694,0.769,0.454,0.677,0.466,0.677,0.276,0.199,
0.344,0.212,0.19,0.657,0.269,0.224,0.614,0.246,
0.252, 0.195, 0.463, 0.559, 0.269, 0.269,
0.331))
p_tot
